// Animal interface
public interface Animal {
    void makeSound();
}

// Concrete animal classes
public class Dog implements Animal {
    @Override
    public void makeSound() {
        System.out.println("Woof!");
    }
}

public class Cat implements Animal {
    @Override
    public void makeSound() {
        System.out.println("Meow!");
    }
}

// Creator interface
public interface AnimalFactory {
    Animal createAnimal(String animalType);
}

// Concrete creator class
public class ConcreteAnimalFactory implements AnimalFactory {
    @Override
    public Animal createAnimal(String animalType) {
        switch (animalType) {
            case "dog":
                return new Dog();
            case "cat":
                return new Cat();
            default:
                throw new IllegalArgumentException("Invalid animal type: " + animalType);
        }
    }
}

// Client code
public class Client {
    public static void main(String[] args) {
        AnimalFactory animalFactory = new ConcreteAnimalFactory();

        Animal dog = animalFactory.createAnimal("dog");
        dog.makeSound();

        Animal cat = animalFactory.createAnimal("cat");
        cat.makeSound();
    }
}
